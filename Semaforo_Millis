byte pulsador = 2;
byte LED_RED_1 = 3;
byte LED_YELLOW = 4;    // Define el pin al que esta conectado el hardware.
byte LED_GREEN_1 = 5;
byte LED_RED_2 = 6;
byte LED_GREEN_2 = 7;
//////////////////////////////
unsigned long Tiempo=0;
extern volatile unsigned long timer0_millis;
long periodo1=90000;                            // Variables necesarias para operar con la funcion millis().
long periodo2=5000;
long periodo3=20000;
long periodo4=20000;
///////////////////////////////
boolean estado1= false;                       // Variables Booleanas para alternas los estados de los leds si fuese necesario.
boolean estado2= false;
//////////////////////////////
unsigned long t1=0;                         // variables para usar millis() en una capa mas profunda.
unsigned long t2=0;
//////////////////////////////
int cont=0;                                 // Variable necesaria para el conteno de las activaciones del boton del peatonal.
/////////////////////////////
void setup() {
  // put your setup code here, to run once:
  pinMode(LED_RED_1, OUTPUT);
  pinMode(LED_YELLOW, OUTPUT);
  pinMode(LED_GREEN_1, OUTPUT);               //Definir la clase de los pines.
  pinMode(LED_RED_2, OUTPUT);
  pinMode(LED_GREEN_2, OUTPUT);
  pinMode(pulsador, INPUT_PULLUP);
}

void semaforo1()
{
  Tiempo = millis();

  if(Tiempo<=periodo1)
  {
    digitalWrite(3,LOW);                //Primer estado del semaforo, luz verde 1 activa y luz roja 2 activa.
    digitalWrite(4,LOW);
    digitalWrite(5,HIGH);
    digitalWrite(6,HIGH);
    digitalWrite(7,LOW);
  }
}

void semaforo2()
{
  Tiempo = millis();

  if(Tiempo>=periodo1 && Tiempo <= periodo1+periodo2)
  {                                                               //Parpaedeo de la luz verde 1 señalando el cambio de estado.
    if(Tiempo-t1>=1000)
    {
      t1=Tiempo;
    estado1=!estado1;
    digitalWrite(3,LOW);
    digitalWrite(4,LOW);
    digitalWrite(5,estado1);
    digitalWrite(6,HIGH);
    digitalWrite(7,LOW);
    }
  }
}

void semaforo3()
{
  Tiempo = millis();

  if(Tiempo>=periodo1+periodo2 && Tiempo<=periodo1+(periodo2*2))
  {                                                                  //Luz naranja activa y luz roja 2 activa.
    digitalWrite(3,LOW);
    digitalWrite(4,HIGH);
    digitalWrite(5,LOW);
    digitalWrite(6,HIGH);
    digitalWrite(7,LOW);
  }
}

void semaforo4()
{
  Tiempo = millis();

  if(Tiempo>=periodo1+(periodo2*2)&& Tiempo<=periodo1+(periodo2*2)+periodo3)   // Luz roja 1 activa y luz verde 2 activa.
  {
    digitalWrite(3,HIGH);
    digitalWrite(4,LOW);
    digitalWrite(5,LOW);
    digitalWrite(6,LOW);
    digitalWrite(7,HIGH);
  }
}


void semaforo5()
{
  Tiempo = millis();
                                                                        //Parpadeo de la luz verde 2 señalando el cambio de estado
  if(Tiempo>=periodo1+(periodo2*2)+periodo3)
  {
    if(Tiempo-t2>=1000)
    {
      t2=Tiempo;
    estado2=!estado2;
    digitalWrite(3,HIGH);
    digitalWrite(4,LOW);
    digitalWrite(5,LOW);
    digitalWrite(6,LOW);
    digitalWrite(7,estado2);
    }

    setMillis(Tiempo);
  }
}

void Peaton()
{
  digitalWrite(5,HIGH);
  digitalWrite(6,HIGH);
  delay(1000);
  digitalWrite(5,LOW);
  digitalWrite(6,HIGH);
  delay(1000);
  digitalWrite(5,HIGH);
  digitalWrite(6,HIGH);
  delay(1000);
  digitalWrite(5,LOW);                    //Tareas a realizar sin excepcion cuando el boton se presione 5 veces.
  digitalWrite(6,HIGH);
  delay(1000);
  digitalWrite(5,HIGH);
  digitalWrite(6,HIGH);
  delay(1000);
  digitalWrite(5,LOW);
  digitalWrite(7,HIGH);
  digitalWrite(3,HIGH);
   digitalWrite(6,LOW);
  delay(20000);
   
}

void setMillis(unsigned long Tiempo){
  uint8_t oldSREG = SREG;
  cli();
  Tiempo=0;
  timer0_millis = Tiempo;                 //Reiniciar la funcion millis() para reiniciar el loop.
  SREG = oldSREG;
}

void loop() 
{
  if (digitalRead(2)==LOW)
  {
    delay(50);
    if(digitalRead(2)==HIGH){       //Condicional para que la funcion Peaton() se active.
    cont++;}
  }
  if(cont==5)
  {
    Peaton();
  }
 semaforo1();
 semaforo2();
 semaforo3();
 semaforo4();
 semaforo5();
}
